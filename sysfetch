#!/bin/bash

# set source directory
[[ -f 'sysfetch' ]] && src=$(dirname "$(readlink -f "$0")") || src="/usr/share/sysfetch"

# global variables
sys="$(uname -snrmo)"
read kernel host kernel_rel arch os <<< "$sys"

# pull code per system
if [[ "$kernel_rel" = *'WSL'* ]] ; then
	source "${src}/sys/wsl.sh"
elif [[ "$sys" = *'Darwin'* ]] ; then
	source "${src}/sys/darwin.sh"
elif [[ "$kernel" = 'Linux' ]] ; then
	source "${src}/sys/linux.sh"
elif [[ "$sys" = *'BSD'* ]] ; then
	source "${src}/sys/bsd.sh"
fi

# wrapper function to write given values in color
_out() {
	case $3 in
		1) _c='31m' ;;
		2) _c='32m' ;;
		3) _c='33m' ;;
		4) _c='34m' ;;
		5) _c='35m' ;;
		6) _c='36m' ;;
	esac
	printf "\033[1;${_c}${1}\033[0m ~ ${2}"
}


# write output
_user && _host && [[ -z "$user" && "$hostname" ]] || printf '\033[1;32m%s\033[0m@\033[1;35m%s\033[0m\n' "$user" "$hostname"
_uptime && [[ -z "$uptime" ]] || _out 'uptime' "${uptime}\n" 4
_kernel && [[ -z "$kernel" ]] || _out 'kernel' "${kernel} ${kernel_rel}\n" 6
_distro && [[ -z "$distro" ]] || _out 'distro' "${distro}"%-3s 2
[[ -z "$arch" ]] || _out 'arch' "${arch}\n" 6
_term && [[ -z "$term" ]] || _out 'term' "${term}"%-3s 3
_shell && [[ -z "$shell" ]] || _out 'shell' "${shell}\n" 5
_de_wm && [[ -z "$de_wm" ]] || _out 'de/wm' "${de_wm}"%-3s 1
_theme && [[ -z "$theme" ]] || _out 'theme' "${theme}\n" 4
_pkgs && [[ -z "$pkgs" ]] || _out 'pkgs' "${pkgs} ${pkgs2}\n" 5
_cpu && _cpu_freq && [[ -z "$cpu" && "$cpu_freq" ]] || _out 'cpu' "${cpu} ${max_cpu}@${cur_cpu} GHz\n" 4
_gpu && [[ -z "$gpu" ]] || _out 'gpu' "${gpu}\n" 6
_gpu && [[ -z "$gpu2" ]] || _out 'gpu' "${gpu2}\n" 6
_mobo && [[ -z "$mobo" ]] || _out 'mobo' "${mobo}\n" 2
_disk && [[ -z "$disk_model" ]] || _out 'disk' "${disk_model} ${cur_disk}/${max_disk} GB ${disk_per}% \n" 3
_ram && [[ -z "$cur_ram" ]] || _out 'ram' "${cur_ram}/${max_ram} MB"%-3s 1
_swap && [[ -z "$cur_swap" ]] || _out 'swap' "${cur_swap}/${max_swap} MB \n" 3

# ascii
source "${src}/ascii.sh"
